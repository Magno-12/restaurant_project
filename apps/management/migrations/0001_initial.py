# Generated by Django 4.2.4 on 2025-01-28 15:04

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('food', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Enter tax percentage (e.g., 10 for 10%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('sale_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('net_sale_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('recipe_cost', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('profit_margin', models.DecimalField(decimal_places=2, default=Decimal('0.00'), editable=False, max_digits=10)),
                ('available', models.BooleanField(default=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('hire_date', models.DateTimeField()),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shift', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('ready', 'Ready to Serve'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='open', max_length=20)),
                ('order_time', models.DateTimeField(auto_now_add=True, help_text='When the order was created')),
                ('completed_time', models.DateTimeField(blank=True, help_text='When the order was completed or cancelled', null=True)),
                ('number_of_guests', models.PositiveIntegerField(default=1, help_text='Number of guests at the table')),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('mobile_payment', 'Mobile Payment')], max_length=20, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Sum of all items before tax and tip', max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tip', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Final amount including tax and tip', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='General notes about the order')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders_served', to='management.employee')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-order_time'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(help_text='Código único para identificar el restaurante', max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)])),
                ('address', models.TextField()),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email', models.EmailField(max_length=254)),
                ('opening_hours', models.CharField(max_length=255)),
                ('website', models.URLField()),
                ('capacity', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Restaurant',
                'verbose_name_plural': 'Restaurants',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('identification', models.CharField(max_length=255)),
                ('cod', models.CharField(max_length=20, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='+1', max_length=128, region=None)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('preferred_payment_method', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('table_number', models.CharField(help_text='Unique identifier for the table within the restaurant', max_length=10)),
                ('capacity', models.IntegerField(help_text='Maximum number of guests that can be seated')),
                ('location', models.CharField(help_text='Location description (e.g., "Outdoor", "Main Hall", "Second Floor")', max_length=255)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('reserved', 'Reserved'), ('cleaning', 'Being Cleaned'), ('maintenance', 'Under Maintenance')], default='available', help_text='Current status of the table', max_length=20)),
                ('reservation_required', models.BooleanField(default=False, help_text='Whether this table requires reservation')),
                ('status_changed_at', models.DateTimeField(auto_now=True, help_text='Last time the status was changed')),
                ('occupied_since', models.DateTimeField(blank=True, help_text='When the table was last occupied', null=True)),
                ('current_server', models.ForeignKey(blank=True, help_text='Server currently assigned to this table', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tables', to='management.employee')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='management.restaurant')),
            ],
            options={
                'verbose_name': 'Table',
                'verbose_name_plural': 'Tables',
                'ordering': ['table_number'],
                'unique_together': {('restaurant', 'table_number')},
            },
        ),
        migrations.CreateModel(
            name='TableService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('notes', models.TextField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.employee')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.table')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price at the time of order', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Special instructions or modifications')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('preparing', 'Preparing'), ('ready', 'Ready to Serve'), ('served', 'Served'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='management.dish')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='management.order')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='management.table'),
        ),
        migrations.AddField(
            model_name='employee',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.restaurant'),
        ),
        migrations.AddField(
            model_name='dish',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dishes', to='management.restaurant'),
        ),
        migrations.CreateModel(
            name='DishIngredient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dish_ingredients', to='management.dish')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dish_ingredients', to='food.inventory')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dish_ingredients', to='management.restaurant')),
            ],
            options={
                'unique_together': {('dish', 'ingredient', 'restaurant')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='dish',
            unique_together={('name', 'restaurant')},
        ),
    ]
